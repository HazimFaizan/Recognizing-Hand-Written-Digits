import tensorflow as tf
from tensorflow import keras
import matplotlib.pyplot as plt
%matplotlib inline
import numpy as np




(X_train, y_train) , (X_test, y_test) = keras.datasets.mnist.load_data()

X_train = X_train / 255
X_test = X_test / 255


X_train_flattened = X_train.reshape(len(X_train), 28*28)
X_test_flattened = X_test.reshape(len(X_test), 28*28)


model_Ubaid = keras.Sequential([
    keras.layers.Flatten(input_shape=(784,)),
    keras.layers.Dense(10, activation='sigmoid')
])

model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

model.fit(X_train_flattened, y_train, epochs=5)





model_Ubaid.evaluate(X_test_flattened, y_test)



y_predicted = model_Ubaid.predict(X_test_flattened)
y_predicted[0]

plt.matshow(X_test[0])
plt.matshow(X_test[1])
plt.matshow(X_test[2])
plt.matshow(X_test[3])


y_predicted_labels = [np.argmax(i) for i in y_predicted]
y_predicted_labels[:5]




#END
